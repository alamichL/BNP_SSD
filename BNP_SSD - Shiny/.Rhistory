shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("BNPdensity")
library(BNPdensity)
?MixNRMI2
runApp()
runApp()
?ssd_gof
?ssd_hc
library(DT)
?datatable
runApp()
?ssd_gof
?ssd_plot_cdf
runApp()
?make.names
load("/home/lalamich/Documents/SSD/script_for_figures/rivm_db.Rdata")
View(rivm_db)
write.csv(rivm_db, "/home/lalamich/Documents/SSD/script_for_figures/")
write.csv(rivm_db, "/home/lalamich/Documents/SSD/script_for_figures/rivm.csv")
write.csv(rivm_db[1:1000,], "/home/lalamich/Documents/SSD/script_for_figures/rivm.csv")
length(which(rivm_db$conc.ind == "P"))
write.csv(rivm_db[which(rivm_db$conc.ind == "P")[1:1000],], "/home/lalamich/Documents/SSD/script_for_figures/rivm.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Documents/GitHub/PY_hyperprior_consistency/scripts2")
shiny::runApp()
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='alamichl',
token='9A0108FBA17C2A71C1F6C2E2D25D2E36',
secret='<SECRET>')
rsconnect::setAccountInfo(name='alamichl',
token='9A0108FBA17C2A71C1F6C2E2D25D2E36',
secret='SFhJ21/pv+FG6cBy6rd6wbfazU1rw3dlVG+c6JFx')
library(BNPdensity)
data(acidity)
shiny::runApp()
source("~/Documents/GitHub/BNP_SSD/BNP_SSD - Shiny/R/functions.R")
acidity <- tible(acidity)
acidity <- tibble(acidity)
acidity
data <- prepare_data(acidity, F, F, F, "acidity", NULL, F, NULL)
data$original
data$data
min(data$original)
min(data$data)
inv_centlog(min(data$data), data$centre, data$scale, data$cs)
inv_centlog(min(data$data), data$centre, data$scale, data$cs, data$log)
sd(data$original)
sd(data$original[1,])
data$original[1]
sd(data$original[1])
sd(data.frame(data$original))
data.frame(data$original)
sd(as.vector(data$original))
sd(acidity)
sd(data$original[["acidity"]])
sd(data$data[["acidity"]])
min(data$original)
min(data$original)-sd(data$original[["acidity"]])/4
inv_centlog(min(data$data)-sd(data$data[["acidity"]])/4, data$centre, data$scale, data$cs, data$log)
inv_centlog(min(data$data)-sd(data$original[["acidity"]])/4, data$centre, data$scale, data$cs, data$log)
sd(data$original[["acidity"]])/4
(sd(data$original[["acidity"]])/4 - data$centre)/data$sd
data$centre
(sd(data$original[["acidity"]])/4 - data$centre)/data$scale
(sd(data$original[["acidity"]])/4 - data$centre)
data$scale
inv_centlog(min(data$data)-(sd(data$original[["acidity"]])/4 - data$centre)/data$scale, data$centre, data$scale, data$cs, data$log)
min(data$original)-sd(data$original[["acidity"]])/4
max(data$original)+data$scale/4
min(data$original)-data$scale/4
log(min(data$original))-sd(log(data$original[["acidity"]]))/4
runApp()
runApp()
prep_data <- data
data <- prep_data$data
conc <- "acidity"
dat <- data.frame(left=data[[conc]], right=data[[conc]])
x <- try(BNPdensity::MixNRMI2cens(dat$left,
dat$right,
probs = c(0.025, 0.975),
Alpha = 1,
Kappa = 0.4,
Gama = 0.5,
distr.k = "normal",
distr.py0 = "normal",
distr.pz0 = "unif",
mu.pz0 = 0.1,
sigma.pz0 = 1.5,
delta_S = 4,
kappa = 2,
delta_U = 2,
Meps = 0.01,
Nx = 150,
Nit = Nit,
Pbi = 0.1,
epsilon = 0,
printtime = TRUE,
extras = TRUE,
adaptive = FALSE
), silent = TRUE)
x
x <- try(BNPdensity::MixNRMI2cens(dat$left,
dat$right,
probs = c(0.025, 0.975),
Alpha = 1,
Kappa = 0.4,
Gama = 0.5,
distr.k = "normal",
distr.py0 = "normal",
distr.pz0 = "unif",
mu.pz0 = 0.1,
sigma.pz0 = 1.5,
delta_S = 4,
kappa = 2,
delta_U = 2,
Meps = 0.01,
Nx = 150,
Nit = 1000,
Pbi = 0.1,
epsilon = 0,
printtime = TRUE,
extras = TRUE,
adaptive = FALSE
), silent = TRUE)
x$means
m <- x$means[[1]]
s <- x$sigmas[[1]]
length(m)
length(s)
s[1]
inv_centlog(s[1], prep_data$centre, prep_data$scale, prep_data$cs, prep_data$log)
m[1]
inv_centlog(m[1], prep_data$centre, prep_data$scale, prep_data$cs, prep_data$log)
fit <- x
lapply(fit$means, inv_centlog, centre=prep_data$centre, scale=prep_data$scale, is.cs=prep_data$cs, is.log=prep_data$log)
fit$means<-lapply(fit$means, inv_centlog, centre=prep_data$centre, scale=prep_data$scale, is.cs=prep_data$cs, is.log=prep_data$log)
GOFplots(fit)
fit$xx <- inv_centlog(fit$xx)
fit$xx <- inv_centlog(fit$xx, centre=prep_data$centre, scale=prep_data$scale, is.cs=prep_data$cs, is.log=prep_data$log)
fit$data <- inv_centlog(fit$data, centre=prep_data$centre, scale=prep_data$scale, is.cs=prep_data$cs, is.log=prep_data$log)
GOFplots(fit)
fit$sigmas<-lapply(fit$sigmas, inv_centlog, centre=prep_data$centre, scale=prep_data$scale, is.cs=prep_data$cs, is.log=prep_data$log)
GOFplots(fit)
fit$sigmas<-x$sigmas
fit$weights
sum(fit$weights[[1]])
prep_data2 <- prepare_data(acidity, F, T, T, "acidity", NULL, F, NULLL)
prep_data2$original
prep_data2$data
runApp()
runApp()
runApp()
runApp()
?log
log(exp(1))
